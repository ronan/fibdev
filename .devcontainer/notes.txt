# echo "⬆️  Updating core and modules to lastest 9.x version ..."
# # git config --global --add safe.directory '*'
# composer10 update --no-install --with-all-dependencies --ignore-platform-req=php

# echo "🔍 Running upgrade status ..."
# composer10 require --no-audit --ignore-platform-req=php --dev drupal/upgrade_status 'drupal/composer_deploy:^1.7'
# drush10 pm:enable upgrade_status composer_deploy
# drush10 us-a --all  --ignore-custom --ignore-uninstalled > /workspace/outbox/upgrade-status.txt

# echo "🪚  Rector? Damn near killed her!"
# echo "🧰 Add developer modules ..."
# composer10 require --no-install --dev palantirnet/drupal-rector
# cp /workspace/drupal10/vendor/palantirnet/drupal-rector/rector.php /workspace/drupal10/vendor/
# /workspace/drupal10/vendor/bin/rector process /workspace/drupal10/web/modules/custom/savethebw
# sed '${s/$/|| \^10\.0/}' /workspace/drupal9/web/modules/custom/savethebw/savethebw.info.yml > /workspace/drupal10/web/modules/custom/savethebw/savethebw.info.yml

# cat /workspace/inbox/unupdatable-modules.txt | tr "\n" " " | xargs composer10 remove --no-update --no-audit

git clone https://git.drupalcode.org/issue/path_redirect_import-3373025.git

git clone https://git.drupalcode.org/issue/scheduled_updates-3172330.git scheduled_updates
cd scheduled_updates
git fetch "https://git.drupalcode.org/issue/scheduled_updates-3172330.git" '3172330-module-is-not'
git checkout -b 'scheduled_updates-3172330-3172330-module-is-not' FETCH_HEAD
git clone -b 3172330-module-is-not https://git.drupalcode.org/issue/scheduled_updates-3172330.git scheduled_updates

echo "📌 Unpin module versions ..."
cat /workspace/inbox/updatable-modules.txt | tr "\n" " " | xargs composer10 require --no-update --no-audit --ignore-platform-req=php

# composer10 show --direct -f json | jq -r '.installed[] | "\(.name):\(.version)"' > /workspace/outbox/installed-2.txt

cd /src/modules;
git clone "https://git.drupalcode.org/issue/video-3353255.git" -b 3353255-fix-undefined-error video


yarn add jquery-once


0) Pre-Prep 
    upgrade to latest 9x versions of everything
    push to prod?

1) Prep:
    set up before and after
    pull custom modules and run rector
    export list of modules (with upgrade problems)
    export upgrade_status

2) develop
    find replacement modules and patches
    fix and test custom composer_deploy
    update theme

3) Finalize
    Run the migration with the custom code and new versions/patches
    Compile to a single git repo
    git add commit

4) Push to prod



wget --spider -r -l 3 https://www.savetheboundarywaters.org 2>&1 \
            | grep '^--' \
            | awk '{ print $3 }' \
            | grep -vi '\.\(css\|js\|png\|gif\|jpg\|jpeg\|pdf\|mp4\|svg\)' \
            > urls.txt


drush10 uli admin/structure/paragraphs_type/homepage_banner_item/display


# TO install:
rm -f ../dropdev/.DS_Store
ln -s ../dropdev/* ./dropdev;
mkdir inbox outbox


1: 🧑‍💻 > Specify the production url and shortname
2: 🖥️ > Create empty directories. Capture info/vrt reference from prod. (initialize.php)
3: 🧑‍💻 > Drop the db and codebase
4: 🖥️ > Import code, db, perform partial upgrade, create path_redirect_import, (ingest.php)
5: 🖥️ > Run tests. If pass: goto 8 (validate.php)
6: 🧑‍💻 > Fix custom themes and modules, find replacements.
7: goto 4
8: 🧑‍💻 > Commit and push

👆 These are... 
    - Todo
    - Tasks - Clashes with VS Code 'task'
    - Activities
    - Jobs
    - Steps
    - Duty
    - Chore

Site Status:
- none -

Todo: Get the code from git
    Todo: Specify the git repo location
    Todo: Checkout the code
Todo: Set up the database
    Todo: Create the db
    Todo: Get data from prod
    Todo: import from dump
Todo: Upgrade to latest
    Todo: Update Contrib Code
    Todo: Update Custom Code
        Todo: Run rector
        Todo: Update metadata
    Todo: Update DB
    Todo: Commit and push

Git specified
    or prompt for repo
Code Exists
    or checkout from git
DB created
    or create db
DB dump Exists
    or pull from
        backup and migrate
            prompt for prod admin credentials
        pantheon (ddev)
        platform (ddev)
    or prompt to put it in the right spot
DB imported
    import from dump
    or import db
Code Upgraded
DB updated



CONTAINERS TO ADD:

A FILE MANAGER
    https://tinyfilemanager.github.io/demo/
        small, php
    https://github.com/spacedriveapp/spacedrive
        rust, cross-cloud, looks like finder but even shinier
sitespeed.io
vs code itself! but... like... the front end... but hosted! Local clouddev
A user interface to pull it altogether
    Something custom built with web tech and accessed via browser
        pro: exactly what I want
        con: software to maintain
    VS Code with custom plugin to ala platform.io
        Pro: Not something from scratch
        Con: Duct tape solution, not much control
    Static site built with web tech and accessed via browser 
        (and statically built during the task processes)
Things in a UI
    Home:
        List of sites
        Docker Controller (portainer)
    Per Site:
        Active Site (Working Site)
        Reference Site
        Side by Side reference vs sites (sync scroll)
        VRT Results
        Sitespeed Results
        Git
        Site admin
        Logs
        Edit Custom Code
            VS Code
            vim
            Cloud 9
        Terminal
            zsh
            php repl
            drush repl
        Debug
        
            





Markdown Table:
| A | B | C |
| :- | :- | :- |
|a|4|$|
||365| ()|

Use these to store data


New invent